// TODO consider fleshing out input system

- I could add more complexity to the input system in c++ but I'm more leaning
  towards having a simple c++ input system and then fleshing things out in lua.

// TODO add lua intergration

- lua needs to be able to communicate with inputs and sending / receive packets.

// TODO implement proper timing, compatible with both pc, and arduino

- persice timing is needed for a bunch of stuff so it would be convinient to
  have a simple way to do it.

- example code:

gdcl::timer send_state_timer( 100, [&] {
  bot.send_state();
}); // every 100 milliseconds, send robot state.

gdcl::timer receive_packets_timer( 20, [&] {
  bot.receive();
}); // every 20 milliseconds, receive packets.

while(1) {
  send_state_timer.interval();
  receive_packets_timer.interval();
}

// TODO send and receive robot state packets

- because the robots are relatively simple in function, their whole state (such
  as motor speeds and maybe range finder values) can be sent in a single packet
  periodically and then stored.

  This is better than sending a 'get_motor_speed' packet for example and then
  waiting for a return packet to read.

// TODO add packet display gui element

- parse and display different packet types in both hex and humand readable form
  not unlike the way wireshark does their packet display.